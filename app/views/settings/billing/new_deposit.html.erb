<div class="max-w-2xl mx-auto">
  <!-- Header -->
  <div class="mb-8">
    <%= link_to settings_billing_path(@advertiser.slug), class: "text-sm text-gray-600 hover:text-gray-900 flex items-center mb-4" do %>
      <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
      </svg>
      Back to Billing
    <% end %>
    
    <h1 class="text-3xl font-bold text-gray-900">Add Funds</h1>
    <p class="mt-1 text-sm text-gray-500">Top up your prepaid balance</p>
  </div>

  <!-- Add Funds Form -->
  <div class="bg-white shadow rounded-lg overflow-hidden">
    <div class="px-6 py-8">
      <%= form_with url: settings_create_deposit_path(@advertiser.slug), method: :post, id: "payment-form", class: "space-y-6" do |f| %>
        
        <!-- Amount Selection -->
        <div>
          <label for="amount" class="block text-sm font-medium text-gray-700 mb-2">
            Select Amount
          </label>
          
          <!-- Quick Amount Buttons -->
          <div class="grid grid-cols-4 gap-3 mb-3">
            <button type="button" data-amount="50" class="amount-btn px-4 py-3 border-2 border-gray-300 rounded-lg text-center hover:border-indigo-500 hover:bg-indigo-50 transition-colors cursor-pointer">
              <div class="text-lg font-bold text-gray-900">$50</div>
            </button>
            <button type="button" data-amount="100" class="amount-btn px-4 py-3 border-2 border-indigo-500 bg-indigo-50 rounded-lg text-center cursor-pointer">
              <div class="text-lg font-bold text-indigo-600">$100</div>
              <div class="text-xs text-indigo-600 mt-1">Popular</div>
            </button>
            <button type="button" data-amount="250" class="amount-btn px-4 py-3 border-2 border-gray-300 rounded-lg text-center hover:border-indigo-500 hover:bg-indigo-50 transition-colors cursor-pointer">
              <div class="text-lg font-bold text-gray-900">$250</div>
            </button>
            <button type="button" data-amount="500" class="amount-btn px-4 py-3 border-2 border-gray-300 rounded-lg text-center hover:border-indigo-500 hover:bg-indigo-50 transition-colors cursor-pointer">
              <div class="text-lg font-bold text-gray-900">$500</div>
            </button>
          </div>
          
          <!-- Custom Amount Input -->
          <div class="relative rounded-md shadow-sm">
            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
              <span class="text-gray-500 sm:text-sm">$</span>
            </div>
            <%= f.number_field :amount, id: "amount", value: 100, min: 5, max: 10000, step: 1, required: true, class: "focus:ring-indigo-500 focus:border-indigo-500 block w-full pl-7 pr-12 sm:text-sm border-gray-300 rounded-md", placeholder: "Enter custom amount" %>
          </div>
          <p class="mt-2 text-xs text-gray-500">
            Minimum: $5 | Maximum: $10,000
          </p>
        </div>

        <!-- Payment Method -->
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-2">
            Payment Method
          </label>
          <p class="text-xs text-gray-500 mb-3">
            <strong>üí≥ Card:</strong> Instant (2.9% + $0.30 fee) &nbsp;|&nbsp; <strong>üè¶ Bank Account (ACH):</strong> 1-4 days (0.8% fee, $5 max) - <strong>Minimum $100</strong>
          </p>
          <div id="payment-element" class="p-3 border border-gray-300 rounded-md">
            <!-- Stripe Payment Element will be inserted here (supports Card + ACH) -->
          </div>
          <div id="payment-errors" class="mt-2 text-sm text-red-600" role="alert"></div>
        </div>

        <% unless @advertiser.payment_method_on_file? %>
          <!-- Save Payment Method Option -->
          <div class="flex items-center">
            <%= f.check_box :save_payment_method, id: "save-payment-method", class: "h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded" %>
            <label for="save-payment-method" class="ml-2 block text-sm text-gray-900">
              Save this card for future use and auto-recharge
            </label>
          </div>
        <% end %>

        <!-- Submit Button -->
        <%= f.hidden_field :payment_method_id, id: "payment-method-id" %>
        
        <div class="flex items-center justify-between pt-4 border-t border-gray-200">
          <p class="text-sm text-gray-500">
            Secure payment powered by Stripe
          </p>
          <button type="submit" id="submit-button" class="inline-flex items-center px-6 py-3 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed">
            <span id="button-text">Add Funds</span>
            <svg class="hidden animate-spin ml-2 h-4 w-4 text-white" id="spinner" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
              <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
              <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
            </svg>
          </button>
        </div>
      <% end %>
    </div>
  </div>

  <!-- Info Box -->
  <div class="mt-6 bg-blue-50 border border-blue-200 rounded-lg p-4">
    <div class="flex">
      <div class="flex-shrink-0">
        <svg class="h-5 w-5 text-blue-400" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path>
        </svg>
      </div>
      <div class="ml-3">
        <h3 class="text-sm font-medium text-blue-800">About prepaid balance</h3>
        <div class="mt-2 text-sm text-blue-700">
          <ul class="list-disc pl-5 space-y-1">
            <li>Your balance is used to send campaigns via USPS</li>
            <li>Current rate: $1.05 per 6"√ó9" postcard (USPS First Class)</li>
            <li>Set up auto-recharge to never run out of funds</li>
            <li>All transactions are secure and encrypted</li>
          </ul>
        </div>
      </div>
    </div>
  </div>
</div>

<script src="https://js.stripe.com/v3/"></script>
<script>
  function initializeStripeDeposit() {
    // Check if we're on the right page
    const paymentElement = document.getElementById('payment-element');
    if (!paymentElement) return;
    
    // Skip if already initialized
    if (paymentElement.dataset.stripeInitialized === 'true') return;
    
    // Wait for Stripe to be available
    if (typeof Stripe === 'undefined') {
      setTimeout(initializeStripeDeposit, 100);
      return;
    }
    
    // Initialize Stripe
    const stripe = Stripe('<%= @publishable_key %>');
    const elements = stripe.elements({
      mode: 'payment',
      amount: 10000, // Default $100, will update dynamically
      currency: 'usd',
      paymentMethodTypes: ['card', 'us_bank_account'],
      paymentMethodCreation: 'manual', // We'll create the payment method ourselves
    });
  
  // Create Payment Element (supports Card + ACH)
  const paymentField = elements.create('payment', {
    layout: 'tabs',
    defaultValues: {
      billingDetails: {
        email: '<%= current_user.email %>'
      }
    }
  });
  
  paymentField.mount('#payment-element');
  paymentElement.dataset.stripeInitialized = 'true';
  
  // Update amount when user changes it
  const amountInput = document.getElementById('amount');
  amountInput.addEventListener('change', () => {
    const newAmount = parseInt(amountInput.value) * 100;
    elements.update({ amount: newAmount });
  });
  
  // Handle validation errors
  paymentField.on('change', (event) => {
    const displayError = document.getElementById('payment-errors');
    if (event.error) {
      displayError.textContent = event.error.message;
    } else {
      displayError.textContent = '';
    }
  });
  
  // Handle quick amount buttons
  document.querySelectorAll('.amount-btn').forEach(btn => {
    btn.addEventListener('click', function() {
      // Remove active class from all buttons
      document.querySelectorAll('.amount-btn').forEach(b => {
        b.classList.remove('border-indigo-500', 'bg-indigo-50');
        b.classList.add('border-gray-300');
      });
      
      // Add active class to clicked button
      this.classList.remove('border-gray-300');
      this.classList.add('border-indigo-500', 'bg-indigo-50');
      
      // Set amount in input
      const amount = this.dataset.amount;
      document.getElementById('amount').value = amount;
    });
  });
  
  // Handle form submission
  const form = document.getElementById('payment-form');
  const submitButton = document.getElementById('submit-button');
  const buttonText = document.getElementById('button-text');
  const spinner = document.getElementById('spinner');
  
  form.addEventListener('submit', async (event) => {
    event.preventDefault();
    
    console.log('Form submit started');
    
    // Disable submit button
    submitButton.disabled = true;
    buttonText.textContent = 'Processing...';
    spinner.classList.remove('hidden');
    
    // Submit payment to Stripe
    console.log('Submitting elements to Stripe...');
    const { error: submitError } = await elements.submit();
    if (submitError) {
      console.error('Elements submit error:', submitError);
      document.getElementById('payment-errors').textContent = submitError.message;
      submitButton.disabled = false;
      buttonText.textContent = 'Add Funds';
      spinner.classList.add('hidden');
      return;
    }
    
    // Create payment method
    console.log('Creating payment method...');
    const { paymentMethod, error } = await stripe.createPaymentMethod({
      elements,
    });
    
    if (error) {
      // Show error
      console.error('Payment method creation error:', error);
      document.getElementById('payment-errors').textContent = error.message;
      submitButton.disabled = false;
      buttonText.textContent = 'Add Funds';
      spinner.classList.add('hidden');
    } else {
      // Set payment method ID and submit form
      console.log('Payment method created:', paymentMethod.id, 'Type:', paymentMethod.type);
      document.getElementById('payment-method-id').value = paymentMethod.id;
      console.log('Submitting form to server...');
      form.submit();
    }
  });
  }
  
  // Initialize on page load and Turbo navigation
  document.addEventListener('turbo:load', initializeStripeDeposit);
  document.addEventListener('DOMContentLoaded', initializeStripeDeposit);
  
  // Also try to initialize immediately in case we're already loaded
  initializeStripeDeposit();
</script>

